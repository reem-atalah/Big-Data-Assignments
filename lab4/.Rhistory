install.packages("arules")
install.packages("arulesViz")
rm(list=ls())
# 1
# change the directory
setwd("D:\faculty\CMP4\semester2\Big Data\Assignments\lab4\Association Rules-20230320T090526Z-001\Association Rules")
# check if directory has changed correctly
getwd()
read.transactions("AssociationRules.csv")
library("arules")
read.transactions("AssociationRules.csv")
data <- read.transactions("AssociationRules.csv")
head(data,10)
head_d <- head(data,10)
head_d
head(data,10)
library("arulesViz")
inspect(data)
head(readable,10)
readable <- inspect(data)
head(readable,10)
head(inspect(data, itemsep=" "),100)
head(inspect(data),100)
inspect(data[1:100])
itemFrequency(data,2)
itemFrequency(data)
itemFrequency(data, type = "absolute")[1:2]
itemFrequency(data)[1:2]
itemFrequency(data, type = "absolute")[1:2]
itemFrequencyPlot(data, topN = 5, type = "absolute")
itemFrequency(data, type = "absolute")[1:3]
itemFrequency(data, type = "absolute")[1:5]
itemFrequency(data, type = "absolute")[1:2]
rules <- apriori(data, parameter = list(supp = min_support, conf = min_conf, minlen = min_cardinality))
min_support <- 0.01
min_conf <- 0.5
min_cardinality <- 2
# use function apriori to generate the association rules with the minimum support, confidence and cardinality
rules <- apriori(data, parameter = list(supp = min_support, conf = min_conf, minlen = min_cardinality))
rules <- apriori(data, parameter = list(supp = min_support, conf = min_conf, minlen = min_cardinality))
rules_sort_supp <- sort(rules, by = "support", decreasing = TRUE)
inspect(rules_sort_supp[1:6])
rules_sort_conf <- sort(rules, by = "confidence", decreasing = TRUE)
# show the first 6 rules
inspect(rules_sort_conf[1:6])
rules_sort_lift <- sort(rules, by = "lift", decreasing = TRUE)
# show the first 6 rules
inspect(rules_sort_lift[1:6])
plot(rules_sort_lift, method = "graph", shading = "lift")
plot(rules_sort_lift, method = "graph", shading = "lift")
plot(rules_sort_lift, method = "graph", measure = "support", shading = "lift")
plot(rules_sort_lift, method = "graph", shading = "lift")
plot(rules, method = "graph")
rules <- apriori(data, parameter = list(supp = min_support, conf = min_conf, minlen = min_cardinality))
plot(rules, method = "graph")
plot(rules, control=list(jitter=2, col = rev(brewer.pal(9, "Greens")[c(3,7,8,9)])),shading = "lift")
plot(rules, control=list(jitter=2,shading = "lift")
plot(rules, control=list(jitter=2,shading = "lift")
plot(rules, control=list(jitter=2,shading = "lift"))
plot(rules)
